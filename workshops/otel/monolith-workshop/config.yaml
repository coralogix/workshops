# To limit exposure to denial of service attacks, change the host in endpoints below from 127.0.0.1 to a specific network interface.
# See https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks

extensions:
  health_check:
  pprof:
    endpoint: 127.0.0.1:1777
  zpages:
    endpoint: 127.0.0.1:55679

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 127.0.0.1:4317
      http:
        endpoint: 127.0.0.1:4318
  filelog:
    include:
      - /var/log/*.log
      - /var/log/syslog
    start_at: beginning
  journald:
    directory: /var/log/journal
    # files: *
    # all: true
    start_at: beginning
    units: #change these for your host
      - acpid.service
      - apparmor.service
      - apport.service
      - blk-availability.service
      - chrony.service
      - cloud-config.service
      - cloud-final.service
      - cloud-init-local.service
      - cloud-init.service
      - console-setup.service
      - cron.service
      - dbus.service
      - finalrd.service
      - fwupd.service
      - getty@tty1.service
      - irqbalance.service
      - keyboard-setup.service
      - kmod-static-nodes.service
      - ldconfig.service
      - lvm2-monitor.service
      - ModemManager.service
      - multipathd.service
      - networkd-dispatcher.service
      - otelcol-contrib.service
      - plymouth-quit-wait.service
      - plymouth-quit.service
      - plymouth-read-write.service
      - polkit.service
      - rsyslog.service
      - serial-getty@ttyS0.service
      - setvtrgb.service
      - snap.amazon-ssm-agent.amazon-ssm-agent.service
      - snapd.apparmor.service
      - snapd.seeded.service
      - snapd.service
      - ssh.service
      - sysstat.service
      - systemd-binfmt.service
      - systemd-fsck-root.service
      - systemd-fsck@dev-disk-by\x2dlabel-BOOT.service
      - systemd-fsck@dev-disk-by\x2dlabel-UEFI.service
      - systemd-journal-catalog-update.service
      - systemd-journal-flush.service
      - systemd-journald.service
      - systemd-logind.service
      - systemd-machine-id-commit.service
      - systemd-modules-load.service
      - systemd-networkd-wait-online.service
      - systemd-networkd.service
      - systemd-random-seed.service
      - systemd-remount-fs.service
      - systemd-resolved.service
      - systemd-sysctl.service
      - systemd-sysusers.service
      - systemd-tmpfiles-setup-dev-early.service
      - systemd-tmpfiles-setup-dev.service
      - systemd-tmpfiles-setup.service
      - systemd-udev-trigger.service
      - systemd-udevd.service
      - systemd-update-done.service
      - systemd-update-utmp.service
      - systemd-user-sessions.service
      - udisks2.service
      - ufw.service
      - unattended-upgrades.service
      - user-runtime-dir@1000.service
      - user@1000.service

  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
      paging:
      processes:
      process:

  # Collect own metrics
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['127.0.0.1:8888']

processors:
  batch:
  resourcedetection/env:
    detectors: ["system", "env"]
    system:
      resource_attributes:
        host.name:
          enabled: true
        host.id:
          enabled: true
  resourcedetection/ec2:
    detectors: ["ec2" ]
    ec2:
      resource_attributes:
        host.name:
          enabled: true
        host.id:
          enabled: true

exporters:
  debug:
    verbosity: detailed

  coralogix:
    # The Coralogix domain
    domain: "cx498.coralogix.com"
    # Your Coralogix private key is sensitive
    private_key: ""

    # (Optional) Ordered list of Resource attributes that are used for Coralogix
    # AppName and SubSystem values. The first non-empty Resource attribute is used.
    # Example: application_name_attributes: ["k8s.namespace.name", "service.namespace"]
    # Example: subsystem_name_attributes: ["k8s.deployment.name", "k8s.daemonset.name", "service.name"]
    application_name_attributes:
    - "service.namespace"
    subsystem_name_attributes:
    - "service.name"

    # Traces, Metrics and Logs emitted by this OpenTelemetry exporter 
    # are tagged in Coralogix with the default application and subsystem constants.
    application_name: "workshop"
    subsystem_name: "monolith"

    # (Optional) Timeout is the timeout for every attempt to send data to the backend.
    timeout: 30s

service:

  pipelines:

    traces:
      receivers: [otlp]
      processors: [resourcedetection/env, resourcedetection/ec2, batch]
      exporters: [coralogix]

    metrics:
      receivers: [otlp, prometheus, hostmetrics]
      processors: [resourcedetection/env, resourcedetection/ec2, batch]
      exporters: [coralogix]

    logs:
      receivers: [otlp, filelog, journald]
      processors: [resourcedetection/env, resourcedetection/ec2, batch]
      exporters: [coralogix]

  extensions: [health_check, pprof, zpages]